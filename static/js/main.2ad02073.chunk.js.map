{"version":3,"sources":["Store.js","components/PokemonsCarousel.js","components/PokemonsTypesSelect.js","components/PokemonsSearchBox.js","components/PokemonsPagination.js","components/PokemonCard.js","components/PokemonsCardDeck.js","components/App.js","serviceWorker.js","index.js"],"names":["Store","this","pokemonsCount","pokemons","types","page","pageSize","loading","names","indicator","storedData","getTypes","getNames","getPokemons","fetch","responce","json","data","results","slice","length","item","push","value","name","pokemon","id","avatarUrl","height","weight","type","abilities","ability","stats","stat","base_stat","limit","offset","count","url","responceForEach","pokemonData","setPokemon","handleChangePage","status","swal","filter","pokemonsJSONObject","map","JSON","stringify","Set","parse","decorate","observable","action","bound","getPokemonByName","getPokemonsByTypes","getSlicedPokemonsByTypes","store","PokemonsCarousel","observer","props","className","autoplay","dots","index","key","src","alt","React","Component","Option","Select","PokemonsTypesSelect","handleChange","mode","placeholder","onChange","Search","Input","PokemonsSearchBox","handleSearch","toLowerCase","options","filterOption","inputValue","option","toUpperCase","indexOf","allowClear","onSearch","PokemonsPagination","pageSizeOptions","showSizeChanger","showQuickJumper","showLessItems","current","total","showTotal","range","PokemonCard","scale","alias","title","label","textStyle","fontSize","fontColor","getTotalEVs","toFixed","bordered","avatar","color","setTypeTagColor","forceFit","showTitle","crosshairs","visible","position","getAverage","PokemonsCardDeck","justify","width","App","align","href","target","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2ad02073.chunk.js","sourcesContent":["import swal from 'sweetalert';\nimport { observable, action, decorate, toJS } from 'mobx';\n\nclass Store {\n  constructor() {\n    this.pokemonsCount = 0;\n    this.pokemons = [];\n    this.types = [];\n    this.page = 1;\n    this.pageSize = 10;\n    this.loading = false;\n    this.names = [];\n\n    this.indicator = 'getPokemons';\n    this.storedData = [];\n\n    this.getTypes();\n    this.getNames();\n    this.getPokemons(this.pageSize, this.page * this.pageSize - this.pageSize);\n  };\n\n  async getTypes() {\n    const responce = await fetch('https://pokeapi.co/api/v2/type');\n    const data = await responce.json();\n    this.types = data.results.slice(0, data.results.length - 2);\n  };\n\n  async getNames() {\n    const responce = await fetch('https://pokeapi.co/api/v2/pokemon?offset=0&limit=964');\n    const data = await responce.json();\n    let names = [];\n    for (const item of data.results) {\n      names.push({ value: item.name });\n    }\n    this.names = names;\n  };\n\n  setPokemon(data) {\n    let pokemon = {};\n    pokemon.id = data.id;\n    pokemon.name = data.name;\n    pokemon.avatarUrl = `./pokemonAvatars/${data.name}.png`;\n    pokemon.height = data.height;\n    pokemon.weight = data.weight;\n    pokemon.types = [];\n    for (const item of data.types) {\n      for (const type of this.types) {\n        if (item.type.name === type.name) {\n          pokemon.types.push({ name: item.type.name });\n          break;\n        }\n      }\n    }\n    pokemon.abilities = [];\n    for (const item of data.abilities) {\n      pokemon.abilities.push({ name: item.ability.name });\n    }\n    pokemon.stats = [];\n    for (const item of data.stats) {\n      pokemon.stats.push({ name: item.stat.name, base_stat: item.base_stat });\n    }\n    return pokemon;\n  };\n\n  async getPokemons(limit, offset) {\n    this.indicator = 'getPokemons';\n    this.loading = true;\n    const responce = await fetch(`https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`);\n    const data = await responce.json();\n    this.pokemonsCount = data.count;\n    let pokemons = [];\n    for (const item of data.results) {\n      const responceForEach = await fetch(`${item.url}`);\n      const pokemonData = await responceForEach.json();\n      pokemons.push(this.setPokemon(pokemonData));\n    }\n    this.loading = false;\n    this.pokemons = pokemons;\n  };\n\n  async getPokemonByName(name) {\n    this.handleChangePage(1, this.pageSize);\n    if (name === '') {\n      return this.getPokemons(this.pageSize, this.page * this.pageSize - this.pageSize);\n    }\n    this.loading = true;\n    const responce = await fetch(`https://pokeapi.co/api/v2/pokemon/${name}`);\n    if (responce.status === 404) {\n      swal('Ooops!', 'No pokemon matched your search :( Try again!', 'error');\n      return this.getPokemons(this.pageSize, this.page * this.pageSize - this.pageSize);\n    } else {\n      const data = await responce.json();\n      this.loading = false;\n      this.pokemons = [this.setPokemon(data)];\n      this.pokemonsCount = this.pokemons.length;\n    }\n  };\n\n  async getPokemonsByTypes(types) {\n    this.indicator = 'getPokemonsByTypes';\n    this.handleChangePage(1, this.pageSize);\n    if (types.length === 0) {\n      return this.getPokemons(this.pageSize, this.page * this.pageSize - this.pageSize);\n    }\n    this.loading = true;\n    let pokemons = [];\n    for (const type of types) {\n      const responce = await fetch(`https://pokeapi.co/api/v2/type/${type}`);\n      const data = await responce.json();\n      for (const item of data.pokemon) {\n        const responceForEach = await fetch(`https://pokeapi.co/api/v2/pokemon/${item.pokemon.name}`);\n        const pokemonData = await responceForEach.json();\n        pokemons.push(this.setPokemon(pokemonData));\n      }\n    }\n    pokemons = pokemons.filter(item => item.id <= 964);\n    const pokemonsJSONObject = pokemons.map(JSON.stringify);\n    pokemons = [...new Set(pokemonsJSONObject)].map(JSON.parse);\n    this.loading = false;\n    this.storedData = pokemons;\n    this.pokemons = pokemons.slice(this.page * this.pageSize - this.pageSize, this.page * this.pageSize);\n    this.pokemonsCount = this.storedData.length;\n  };\n\n  getSlicedPokemonsByTypes(page, pageSize) {\n    this.pokemons = this.storedData.slice(page * pageSize - pageSize, page * pageSize);\n  };\n\n  handleChangePage(page, pageSize) {\n    this.page = page;\n    this.pageSize = pageSize;\n  };\n};\n\ndecorate(Store, {\n  pokemonsCount: observable,\n  pokemons: observable,\n  page: observable,\n  pageSize: observable,\n  loading: observable,\n  indicator: observable,\n  storedData: observable,\n  getPokemons: action.bound,\n  getPokemonByName: action.bound,\n  getPokemonsByTypes: action.bound,\n  handleChangePage: action.bound,\n  getSlicedPokemonsByTypes: action.bound\n});\n\nconst store = new Store();\nexport default store;","import React from 'react';\nimport 'antd/dist/antd.css';\nimport './scss/PokemonsCarousel.css';\nimport { Carousel } from 'antd';\nimport { observer } from 'mobx-react';\n\nconst PokemonsCarousel = observer(class PokemonsCarousel extends React.Component {\n  constructor(props) {\n    super(props);\n  };\n\n  render() {\n    return (\n      <div className=\"carousel\">\n        <Carousel autoplay dots={false}>\n          {this.props.data.map((item, index) =>\n            <img key={index} className=\"carousel__image\" src={item.avatarUrl} alt=\"pokemon avatar\" />\n          )}\n        </Carousel>\n      </div>\n    );\n  };\n});\n\nexport default PokemonsCarousel;","import React, { Children } from 'react';\nimport 'antd/dist/antd.css';\nimport './scss/PokemonsTypesSelect.css';\nimport { Select } from 'antd';\nconst { Option } = Select;\nimport { observer } from 'mobx-react';\nimport { toJS } from 'mobx';\n\nconst PokemonsTypesSelect = observer(\n  class PokemonsTypesSelect extends React.Component {\n    constructor(props) {\n      super(props);\n    };\n    handleChange = (types) => {\n      this.props.getPokemonsByTypes(types);\n    };\n\n    render() {\n      return (\n        <div className=\"select\">\n          <Select\n            className=\"select__component\"\n            mode=\"multiple\"\n            placeholder=\"Search pokemon by type\"\n            onChange={this.handleChange}>\n            {this.props.types.map(item =>\n              <Option className=\"select__option\" key={item.name}>{item.name}</Option>)}\n          </Select>\n        </div >\n      );\n    };\n  });\n\nexport default PokemonsTypesSelect;","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Input } from 'antd';\nconst { Search } = Input;\nimport { AutoComplete } from 'antd';\nimport './scss/PokemonsSearchBox.css';\nimport { observer } from 'mobx-react';\nimport { toJS } from 'mobx';\n\nconst PokemonsSearchBox = observer(\n  class PokemonsSearchBox extends React.Component {\n    constructor(props) {\n      super(props);\n    };\n\n    handleSearch = (value) => {\n      this.props.getPokemonByName(value.toLowerCase());\n    };\n\n    render() {\n      return (\n        <div className=\"searchbox\">\n\n          <AutoComplete\n            className=\"searchbox__search\"\n            options={this.props.names}\n            filterOption={(inputValue, option) =>\n              option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1}\n          >\n            <Search\n              type=\"text\"\n              allowClear=\"true\"\n              placeholder=\"Search pokemon by name\"\n              onSearch={this.handleSearch} />\n          </AutoComplete>\n\n          {/* <AutoComplete\n            className=\"searchbox__search\"\n            options={this.props.names}\n            allowClear=\"true\"\n            placeholder=\"Search pokemon by name\"\n            onSearch={this.handleSearch}\n            filterOption={(inputValue, option) =>\n              option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n            }\n          /> */}\n\n          {/* <Search\n            className=\"searchbox__search\"\n            type=\"text\"\n            allowClear=\"true\"\n            placeholder=\"Search pokemon by name\"\n            onSearch={this.handleSearch}\n          /> */}\n          {/* list=\"hints\" */}\n          {/* <datalist id=\"hints\">\n            {this.props.names.map((item, index) =>\n              <option key={index}>{item}</option>\n            )}\n          </datalist> */}\n        </div>\n      );\n    };\n  });\n\nexport default PokemonsSearchBox;","import React from 'react';\nimport 'antd/dist/antd.css';\nimport './scss/PokemonsPagination.css';\nimport { Pagination } from 'antd';\nimport { observer } from 'mobx-react';\n\nconst PokemonsPagination = observer(class PokemonsPagination extends React.Component {\n  constructor(props) {\n    super(props);\n  };\n\n  handleChange = (page, pageSize) => {\n    this.props.handleChange(page, pageSize);\n    switch (this.props.indicator) {\n      case 'getPokemons':\n        this.props.getPokemons(pageSize, page * pageSize - pageSize);\n        break;\n      case 'getPokemonsByTypes':\n        this.props.getSlicedPokemonsByTypes(page, pageSize);\n        break;\n    };\n  };\n\n  render() {\n    return (\n      <div className=\"pagination\">\n        <Pagination\n          className=\"pagination__component\"\n          pageSizeOptions={['10', '20', '50']}\n          showSizeChanger\n          showQuickJumper\n          showLessItems={true}\n          current={this.props.page}\n          onChange={this.handleChange}\n          total={this.props.total}\n          showTotal={(total, range) => `${range[0]}-${range[1]} of ${total} items`} />\n      </div>\n    );\n  };\n});\n\nexport default PokemonsPagination;","import React from 'react';\nimport 'antd/dist/antd.css';\nimport './scss/PokemonCard.css';\nimport { Card, Tag } from 'antd';\nimport { Chart, Axis, Legend, Tooltip, Geom } from 'bizcharts';\nimport { observer } from 'mobx-react';\nimport { toJS } from 'mobx';\n\nconst PokemonCard = observer(\n  class PokemonCard extends React.Component {\n    constructor(props) {\n      super(props);\n\n      // For Chart\n      this.scale = {\n        base_stat: { alias: 'Effort values' },\n        name: { alias: 'Stats' }\n      };\n\n      this.title = this.label = {\n        textStyle: {\n          fontSize: '14',\n          fontColor: '#000000'\n        }\n      };\n    };\n\n    setTypeTagColor(item) {\n      switch (item.name) {\n        case 'normal':\n          return 'geekblue';\n        case 'fighting':\n          return 'volcano';\n        case 'flying':\n          return 'blue';\n        case 'poison':\n          return 'magenta';\n        case 'ground':\n          return 'gold';\n        case 'rock':\n          return 'orange';\n        case 'bug':\n          return 'green';\n        case 'ghost':\n          return 'purple';\n        case 'steel':\n          return 'geekblue';\n        case 'fire':\n          return 'volcano';\n        case 'water':\n          return 'blue';\n        case 'grass':\n          return 'green';\n        case 'electric':\n          return 'gold';\n        case 'psychic':\n          return 'magenta';\n        case 'ice':\n          return 'cyan';\n        case 'dragon':\n          return 'red';\n        case 'dark':\n          return 'purple';\n        case 'fairy':\n          return 'magenta';\n      };\n    };\n\n    getTotalEVs(stats) {\n      let total = 0;\n      for (let item of stats) {\n        total += item.base_stat;\n      }\n      return total;\n    };\n\n    getAverage(stats) {\n      return (this.getTotalEVs(stats) / stats.length).toFixed(2);\n    };\n\n    render() {\n      return (\n        <Card className=\"card\" title={this.props.name} bordered={true}>\n          <img className=\"card__image card-div\" src={this.props.avatar} alt=\"card image\" />\n          <span className=\"card__title\">Types</span>\n          <div className=\"card-div\">\n            {this.props.types.map((item, index) =>\n              <Tag key={index} className=\"card__type\" color={this.setTypeTagColor(item)}>{item.name}\n              </Tag>\n            )}\n          </div>\n          <span className=\"card__title\">Abilities</span>\n          <div className=\"card-div\">\n            <ul className=\"card__abilities\">\n              {this.props.abilities.map((item, index) =>\n                <li key={index}>{item.name}</li>\n              )}\n            </ul>\n          </div>\n          <div className=\"card-height-weight\">\n            <div className=\"card__height\">\n              <span className=\"card__title\">Height</span>\n              <Tag color=\"magenta\">{this.props.height}\n              </Tag>\n            </div>\n            <div className=\"card__weight\">\n              <span className=\"card__title\">Weight</span>\n              <Tag color=\"purple\">{this.props.weight}\n              </Tag>\n            </div>\n          </div>\n          <span className=\"card__title\">Stats</span>\n          <div className=\"card-div card__stats\">\n            <Chart height={200} data={this.props.stats} scale={this.scale} forceFit>\n              <Tooltip showTitle={false} crosshairs={{ type: 'rect' }} />\n              <Legend visible={false} />\n              <Axis title={this.title} name=\"base_stat\" label={this.label} />\n              <Axis name=\"name\" label={0} visible={false} />\n              <Geom type=\"interval\" position=\"name*base_stat\"\n                color={['name', ['#ff0000', '#ff8c00', '#ffd700', '#1e90ff', '#00fa9a', '#ff69b4']]} />\n            </Chart>\n          </div>\n          <div className=\"card-total-average\">\n            <div className=\"card__total\">\n              <span className=\"card__title\">Total EVs</span>\n              <Tag color=\"magenta\">{this.getTotalEVs(this.props.stats)}\n              </Tag>\n            </div>\n            <div className=\"card__average\">\n              <span className=\"card__title\">Average</span>\n              <Tag color=\"purple\">{this.getAverage(this.props.stats)}\n              </Tag>\n            </div>\n          </div>\n        </Card >\n      );\n    };\n  });\n\nexport default PokemonCard;","import React from 'react';\nimport 'antd/dist/antd.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport './scss/PokemonsCardDeck.css';\nimport { Row, Col } from 'antd';\nimport Loader from 'react-loader-spinner';\nimport PokemonCard from './PokemonCard.js';\nimport { observer } from 'mobx-react';\nimport { toJS } from 'mobx';\n\nconst PokemonsCardDeck = observer(\n  class PokemonsCardDeck extends React.Component {\n    constructor(props) {\n      super(props);\n    };\n\n    render() {\n      return (\n        <Row className=\"card-deck\" justify=\"center\">\n          {this.props.loading ?\n            <Loader className=\"loader\"\n              type=\"Oval\"\n              color=\"gold\"\n              height={80}\n              width={80}\n            /> :\n            this.props.data.map((item, index) =>\n              // <Col key={index} xs={24} sm={12} md={12} lg={8} xl={8}>\n              <PokemonCard key={index} name={item.name.toUpperCase()} avatar={item.avatarUrl}\n                types={item.types} abilities={item.abilities} height={item.height}\n                weight={item.weight} stats={item.stats} />\n              // </Col>\n            )}\n        </Row>\n      );\n    };\n  });\n\nexport default PokemonsCardDeck;","import React from 'react';\nimport 'antd/dist/antd.css';\nimport './scss/App.css';\nimport PokemonsCarousel from './PokemonsCarousel.js';\nimport PokemonsTypesSelect from './PokemonsTypesSelect.js';\nimport PokemonsSearchBox from './PokemonsSearchBox.js';\nimport PokemonsPagination from './PokemonsPagination.js';\nimport PokemonsCardDeck from './PokemonsCardDeck.js';\nimport { observer } from 'mobx-react';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nconst App = observer(\n  class App extends React.Component {\n    constructor(props) {\n      super(props);\n    };\n\n    render() {\n      return (\n        <div className=\"layout\">\n          <div className=\"header\">\n            <div className=\"logo\">\n              <span className=\"logo__title\">Poke&#769;dex\n            <img className=\"logo__image logo__image_animated\" align=\"middle\" src=\"./logo.png\" alt=\"logo image\" />\n              </span>\n            </div>\n          </div>\n          <div className=\"content\">\n            <PokemonsCarousel data={this.props.store.pokemons} />\n            <div className=\"select-searchbox\">\n              <PokemonsTypesSelect types={this.props.store.types} getPokemonsByTypes={this.props.store.getPokemonsByTypes} />\n              <PokemonsSearchBox names={this.props.store.names} getPokemonByName={this.props.store.getPokemonByName} />\n            </div>\n            <PokemonsPagination page={this.props.store.page} handleChange={this.props.store.handleChangePage} total={this.props.store.pokemonsCount} indicator={this.props.store.indicator} getPokemons={this.props.store.getPokemons} getSlicedPokemonsByTypes={this.props.store.getSlicedPokemonsByTypes} />\n            <PokemonsCardDeck data={this.props.store.pokemons} loading={this.props.store.loading} page={this.props.store.page} pageSize={this.props.store.pageSize} />\n          </div>\n          <div className=\"footer\">\n            <span className=\"footer__text\">Connect with us</span>\n            <div className=\"footer-icons\">\n              <a className=\"footer__facebook-link\" href=\"https://www.facebook.com/Pokemon/\" target=\"_blank\">\n                <i className=\"fab fa-facebook-square footer__icon\"></i>\n              </a>\n              <a className=\"footer__youtube-link\" href=\"https://www.youtube.com/user/pokemon\" target=\"_blank\">\n                <i className=\"fab fa-youtube-square footer__icon\"></i>\n              </a>\n              <a className=\"footer__twitter-link\" href=\"https://twitter.com/pokemon\" target=\"_blank\">\n                <i className=\"fab fa-twitter-square footer__icon\"></i>\n              </a>\n              <a className=\"footer__instagram-link\" href=\"https://www.instagram.com/pokemon/\" target=\"_blank\">\n                <i className=\"fab fa-instagram footer__icon\"></i>\n              </a>\n              <a className=\"footer__tumblr-link\" href=\"https://pokemon.tumblr.com/\" target=\"_blank\">\n                <i className=\"fab fa-tumblr-square footer__icon\"></i>\n              </a>\n            </div>\n            <span className=\"footer__note\">An open-source site created by Sokolova with help from <a className=\"footer__pokeapi-link\"\n              href=\"https://pokeapi.co/\"\n              target=\"_blank\">Pokéapi</a></span>\n          </div>\n        </div >\n      );\n    };\n  });\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport store from './Store.js';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App store={store} />, document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}